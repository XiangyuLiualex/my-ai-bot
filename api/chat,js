// 文件路径：api/chat.js
export default async function handler(req, res) {
  // 只允许 POST
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  // 从请求体里获取 messages
  const { messages } = req.body;
  if (!messages) {
    return res.status(400).json({ error: 'Missing "messages" in request body' });
  }

  try {
    // 调用 Coze 的 OpenAI 兼容接口
    const response = await fetch('https://api.coze.com/open_api/v2/chat', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        // 从 Vercel 环境变量读取 token
        'Authorization': `Bearer ${process.env.COZE_API_TOKEN}`
      },
      body: JSON.stringify({
        model_id: 'coze:gpt4o-mini',  // 你选择的模型 ID
        messages,                     // 直接传前端的 messages
        stream: false                // 如果需要流式输出可改为 true
      })
    });

    const data = await response.json();
    // 把 Coze 返回的结果原样转发给前端
    return res.status(200).json(data);

  } catch (error) {
    return res.status(500).json({ error: error.message });
  }
}
